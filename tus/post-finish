#!/bin/bash

check() {
    variable=$1
    if [ -z ${variable} ] ; then
        echo "'\${variable} is unset. Exiting"
        exit -1
    fi
}

cleanup() {
  file=${1}

  # cleanup - remove data file and .info
  rm -f "${file}"
  rm -f "${file}.info"
}

check AWS_ACCESS_KEY_ID
check AWS_SECRET_ACCESS_KEY
check AWS_DEFAULT_REGION
check S3_BUCKET

file="/data/${TUS_ID}"

if [ -f "${file}" ] ; then
    itemId=$(cat "${file}.info" | jq .MetaData.itemId | sed -e 's/"//g')
    filename=$(cat "${file}.info" | jq .MetaData.filename | sed -e 's/"//g')
    token=$(cat "${file}.info" | jq .MetaData.token | sed 's/"//g')

    if [ -z ${token} ] ; then
        echo "Can't get user token from metadata. Access denied by default."
        exit -1
    fi

    # copy to s3
    if [ ! -z ${S3_ENDPOINT_URL} ] ; then
        aws --endpoint-url "${S3_ENDPOINT_URL}" s3 cp "${file}" "s3://${S3_BUCKET}/${itemId}/${filename}"
        [[ $? != 0 ]] && cleanup ${file} && exit -1
    else
        aws s3 cp "${file}" "s3://${S3_BUCKET}/${itemId}/${filename}"
        [[ $? != 0 ]] && cleanup ${file} && exit -1
    fi

    if [ ! -z "${POST_FINISH}" ] ; then
        curl --silent --header "authorization: Bearer ${token}" "${POST_FINISH}/${itemId}"
    fi
    cleanup ${file}

fi